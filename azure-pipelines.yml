# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

variables:
  CI: true
  npm_config_cache: $(Pipeline.Workspace)/.npm

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: npmAuthenticate@0
  inputs:
    workingFile: .npmrc
    customEndpoint: 'my-npm-connection'
    
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

# - task: CacheBeta@1
#   inputs:
#     key: npm | $(Agent.OS)
#     path: $(npm_config_cache)
#   displayName: 'Cache Npm'

- script: |
    npm install
  displayName: 'npm install'

- script: |
    npm pack
  displayName: 'Package for release'

- task: CopyFiles@2
  inputs:
      contents: '*.tgz'
      targetFolder: $(Build.ArtifactStagingDirectory)
  displayName: 'Copy archives to artifacts staging directory'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'package.json' 
    targetFolder: $(Build.ArtifactStagingDirectory)/npm
  displayName: 'Copy package.json'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/npm'
    artifactName: npm
  displayName: 'Publish npm artifact'


- script: |
    npm config set //registry.npmjs.org/:_authToken=${NPMTOKEN}
    npm config set scope "@juliakm"
    npm config list
    npm version patch
    npm publish --access public

#-registry https://pkgs.dev.azure.com/jukullam/_packaging/tiny/npm/registry/

# - script: npm ci
    # workingFile:
    # customEndpoint: # Optional
# #- script: npm ci
# - script: npm publish --access=public
# - script: |
#     npm publish
#     displayName: 'Publish for release'

#- script: npm config ls -l
# - script: |
#     npm whoami

#- script: | 
    # npm config set '//registry.npmjs.org/:authToken' "${NPMTOKEN}"
    # npm login
    # npm publish --access=public

# - task: Npm@1
#   inputs:
#     command: 'publish'
#     publishEndpoint: 'my-npm-connection'
#     # publishFeed: tiny
#     publishRegistry: 'useExternalRegistry'
#     customRegistry: 'useNpmrc'
#   displayName: 'Publish npmjs'

# - script: |
#     npm config ls -l


# - task: Npm@1
#   inputs:
#     command: publish
#     publishRegistry: useFeed
#     publishFeed: feedName
